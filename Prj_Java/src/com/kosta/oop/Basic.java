package com.kosta.oop;

public class Basic {

	//전역변수
	int iv = 0; //인스턴스 변순데, 메인메서드가 static이 붙은 클래스메서드니, 전역변수에도 static을 붙여주자. 이 변수는 인스턴스 화(new)를 해야지 쓸 수 있는 변수이다. 
	
	static int cv = 1; //static이 붙은 변수는 '클래스 변수' 라고 한다. static 이 없는 메서드같은곳에서도 쓸수 있음. 즉, 아무데서나 쓸 수 있음
	
	
	//인스턴스 -> new
	//클래스(static) -> static
	
	
	
	
	//오버로딩 : 하나의 클래스에서 메서드를 복붙했을 때, 에러가 안나면 오버로딩이다. 
	//1. 메서드 이름을 같게 해라
	//2. 파라미터의 타입을 다르게 해라(괄호변경)
	//메서드의 괄호안에 들어간 변수를 매개변수 또는 아규먼트 또는 파라미터 또는 인자 라고 한다.
	
	//인스턴스 메서드(지금 인스턴스 화가 필요한 메서드)를 만들어보자. 오버로딩 했기 때문에 에러안남
	public void main(String args) { //얘는 메모리에 안올라가있어서 누군가가 new로 올려주면 iv도 cv도 사용가능.
		
		//iv는 인스턴스변수, main은 인스턴스 메서드는 클래스를 new했을 때 참조변수로 호출된다.
		//cv는 클래스(static)변수이다. static은 F11로 실행하면 바로 메모리에 올라간다
		//
		System.out.println(iv);
		System.out.println(cv); 
		System.out.println("인스턴스 메인 메서드");
	}
	
	
	
	
	
	//static은 우리가 new를 하지 않아도 메모리에 올라간다.
	//메모리 올리는 방법 == 인스턴스화 == 주소가있다 == 참조가능(갖다쓸수있음)
	//1. 강제로 올리는 방법 ( new )
	//2. 알아서 올라가는 방법 ( static )
	//즉, static은 주소가 있으며 호출(갖다쓸수있음)이 가능하다고 알고 있자.
	
	
	
	
	
	//static이 붙은 메서드는 '클래스메서드' 라고 한다.
	public static void main(String[] args) {
		
		//인스턴스의 생성 방법
		//클래스명 참조변수명;     -> 객체를 다르기 위한 참조변수 선언
		//참조변수명 = new 클래스명();    -> 객체 생성 후, 생성된 객체의 주소를 참조변수에 저장
		//메서드 안에서 쓰는 변수를 지역변수 라고 한다.
		
		int num = 0; //지역변수
		System.out.println(num); //0
		
		Basic a = new Basic();
		System.out.println(a.iv); 
		//Sysout(iv)는 에러 -> 맨위에보면 인스턴스 화를 해줘야한다했으니(해주지 않아서 그냥 출력하면 에러) new로 객체 하나 생성해줘야 한다. 이때, rv.iv를 참조변수 라고 한다.
		//즉, iv는 인스턴스 변수고, 메인메서드는 클래스메서드 이기 때문에 호출이 불가한다. 꼭 객체(인스턴스화)를 생성해줘야 한다.
		//iv를 정상적으로 출력하기 위해. 즉, 인스턴스 변수를 호출하려면 객체를 만들어서 호출해야 한다. 이 때, 클래스의 객체를 만들어서 참조변수.변수 형식으로 호출한다.
		//즉, 인스턴스변수는 참조변수.iv로 한다.
		
		System.out.println(Basic.cv); //맨위에 static int cv = 1 이라는 클래스 변수 이자 전역 변수 이기 때문에 1이 정상적으로 출력된다.
		//즉, cv는 클래스변수 이기 때문에 클래스명.cv로 한다.
		
		
		
		System.out.println(cv); //즉, 클래스메서드 : (클래스)cv로 한다.
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	}

}
