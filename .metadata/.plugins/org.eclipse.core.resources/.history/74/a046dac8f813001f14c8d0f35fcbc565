package com.kosta.board;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.kosta.sample.jdbc.EmpVO;

public class Board {
	//오라클 연결 메서드 = give : parameter
	//              = take  : return

	private static final String DB_URL = "jdbc:oracle:thin:@127.0.0.1:1521:XE";
	private static final String DB_ID = "it";
	private static final String DB_PW = "0000";


	public Connection oracleConn () {

		Connection conn = null;
		PreparedStatement pstmt  = null;
		ResultSet rs = null;

		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		try {
			conn = DriverManager.getConnection(DB_URL, DB_ID, DB_PW);
			if(conn != null) {
				System.out.println("conn ok");
			} else {
				System.out.println("faild");
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} 
		return conn;
	}


	public void oracleClose(Connection conn, PreparedStatement pstmt, ResultSet rs) {
		try {
			if (rs!=null) rs.close();
			if (pstmt!=null) pstmt.close();
			if (conn!=null) conn.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	public void oracleClose(Connection conn, PreparedStatement pstmt) {
		try {
			if (pstmt!=null) pstmt.close();
			if (conn!=null) conn.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}



	//public ArrayList<EmpVO> boardSelect(Connection conn) {
	public ArrayList<EmpVO> boardSelect() {	
		Connection conn = null;
		PreparedStatement pstmt  = null;
		ResultSet rs = null;
		ArrayList<EmpVO> list = new ArrayList<EmpVO>();

		try {
			conn = oracleConn();  //---------------------메서드 호출을 통해 conn 받아오기
			String sql = "select * from emp";
			pstmt = conn.prepareStatement(sql);
			rs =  pstmt.executeQuery();

			//------------------------------------------------------
			// ArrayList(EmpVO) 
			//------------------------------------------------------
			//while(rs.next() == true) {
			while(rs.next()) {
				EmpVO vo = new EmpVO();
				vo.setEmpno(rs.getInt("empno"));
				vo.setEname(rs.getString("ename"));
				list.add(vo);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			oracleClose(conn, pstmt, rs);
		}
		return list;
	}


	public int boardDelete(int empno) {

		Connection conn = null;
		PreparedStatement pstmt  = null;
		int delCount = 0;
		try {
			conn = oracleConn();  //---------------------메서드 호출을 통해 conn 받아오기
			//String sql = "delete from emp where empno=" + empno;

			String sql = "delete from emp where empno=?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, empno);        //------------------런타임시 : 동적 바인딩
			delCount =  pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			oracleClose(conn, pstmt);
		}
		return delCount;
	}

	public static void main(String[] args) {
		Board obj = new Board();

		int delCount =  obj.boardDelete(7521);
		System.out.println("총 삭제:" + delCount);

		ArrayList<EmpVO> list = obj.boardSelect();
		System.out.println("총:" + list.size()); 
		for(int i=0; i<list.size(); i++) {
			int a    = list.get(i).getEmpno();
			String b = list.get(i).getEname();
			System.out.println(a + "\t" + b);
		}

	}



}
